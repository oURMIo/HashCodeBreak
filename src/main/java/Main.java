class FirstHashCode{     protected int i=0;     Object f = new Object();     @Override     public int hashCode(){          i+=Math.random()*100/Math.random()*100+1;          return f.hashCode()+i;     }}class SecondHashCode{     @Override     public boolean equals(Object object){          if (this != object){               return true;          }          return false;     }}class ThirdHashCode{     Object f = new Object();     private int i;     private int hash;        // not use     public ThirdHashCode(int i){          this.i = i;     }     @Override     public int hashCode() {          if (i==0){               hash = f.hashCode();               return f.hashCode();          }          return i;     }}public class Main {     private static void breakHashCode1(){          Object f = new FirstHashCode();          System.out.println("/////   BREAK HASHCODE 1   /////");          System.out.printf("hashCode f = %s %n", f.hashCode());          System.out.printf("hashCode f = %s %n %n", f.hashCode());     }     private static void breakHashCode2() {          Object s1 = new SecondHashCode();          Object s2 = new SecondHashCode();          System.out.println("/////   BREAK HASHCODE 2   /////");          System.out.printf("s1 == s2 ?= %s %n", s1.equals(s2));          System.out.printf("hashCode s1 = %s %n", s1.hashCode());          System.out.printf("hashCode s2 = %s %n %n", s2.hashCode());     }     private static void breakHashCode3(){          Object t1 = new ThirdHashCode(0);          Object t2 = new ThirdHashCode(t1.hashCode());          System.out.println("/////   BREAK HASHCODE 3   /////");          System.out.printf("hashCode t1 = %s %n",t1.hashCode());          System.out.printf("hashCode t2 = %s %n %n",t2.hashCode());     }     public static void main(String[] arg){          breakHashCode1();          breakHashCode2();          breakHashCode3();     }     public int i;}